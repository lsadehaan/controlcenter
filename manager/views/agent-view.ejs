<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> - Control Center</title>
  <link rel="stylesheet" href="/css/style.css">
  <style>
    .agent-details {
      background: white;
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
    .detail-row {
      display: flex;
      padding: 10px 0;
      border-bottom: 1px solid #eee;
    }
    .detail-label {
      font-weight: bold;
      width: 150px;
      color: #666;
    }
    .detail-value {
      flex: 1;
      font-family: monospace;
    }
    .status-badge {
      display: inline-block;
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: bold;
    }
    .status-online { background: #d4edda; color: #155724; }
    .status-offline { background: #f8d7da; color: #721c24; }
    .actions-bar {
      display: flex;
      gap: 10px;
      margin-bottom: 20px;
    }
    .log-table {
      width: 100%;
      background: white;
      border-radius: 8px;
      overflow: hidden;
    }
    .log-table th {
      background: #f8f9fa;
      padding: 10px;
      text-align: left;
      font-size: 12px;
      text-transform: uppercase;
      color: #666;
    }
    .log-table td {
      padding: 10px;
      border-top: 1px solid #dee2e6;
      font-size: 13px;
    }
    .log-level {
      padding: 2px 6px;
      border-radius: 3px;
      font-size: 11px;
      font-weight: bold;
    }
    .log-debug { background: #e9ecef; color: #495057; }
    .log-info { background: #d1ecf1; color: #0c5460; }
    .log-warn { background: #fff3cd; color: #856404; }
    .log-error { background: #f8d7da; color: #721c24; }
    
    /* Workflow display styles */
    .workflows-by-trigger {
      margin-top: 20px;
    }
    .trigger-group {
      margin-bottom: 30px;
      background: white;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }
    .trigger-header {
      margin: 0 0 15px 0;
      font-size: 18px;
      display: flex;
      align-items: center;
    }
    .workflow-cards {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 15px;
    }
    .workflow-card {
      background: #f8f9fa;
      border: 1px solid #dee2e6;
      border-radius: 6px;
      padding: 15px;
      transition: all 0.2s;
    }
    .workflow-card:hover {
      border-color: #007bff;
      box-shadow: 0 2px 8px rgba(0,123,255,0.15);
    }
    .workflow-name {
      font-weight: bold;
      font-size: 16px;
      margin-bottom: 10px;
      color: #333;
    }
    .workflow-details {
      font-size: 13px;
      color: #666;
    }
    .workflow-detail {
      margin: 5px 0;
      display: flex;
      align-items: center;
    }
    .detail-icon {
      margin-right: 8px;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <nav class="navbar">
    <div class="nav-container">
      <div class="nav-brand">
        <h1>Control Center</h1>
      </div>
      <ul class="nav-menu">
        <li><a href="/">Dashboard</a></li>
        <li><a href="/agents" class="active">Agents</a></li>
        <li><a href="/workflows">Workflows</a></li>
        <li><a href="/workflow-editor">Editor</a></li>
        <li><a href="/alerts">Alerts</a></li>
        <li><a href="/logs">Logs</a></li>
        <li><a href="/settings">Settings</a></li>
      </ul>
    </div>
  </nav>
  
  <main class="main-content">
    <div class="container">
      <div class="page-header">
        <h2>Agent Details</h2>
        <a href="/agents" class="btn">Back to Agents</a>
      </div>
      
      <div class="actions-bar">
        <a href="/agents/<%= agent.id %>/configure" class="btn btn-primary">Configure</a>
        <a href="/agents/<%= agent.id %>/filewatcher" class="btn btn-primary">File Watchers</a>
        <button class="btn" onclick="sendCommand('reload-config')">Reload Config</button>
        <button class="btn" onclick="sendCommand('git-pull')">Git Pull</button>
        <button class="btn btn-danger" onclick="deleteAgent()">Delete Agent</button>
      </div>
      
      <div class="agent-details">
        <div class="detail-row">
          <div class="detail-label">Agent ID:</div>
          <div class="detail-value"><%= agent.id %></div>
        </div>
        <div class="detail-row">
          <div class="detail-label">Hostname:</div>
          <div class="detail-value"><%= agent.metadata?.hostname || 'Unknown' %></div>
        </div>
        <div class="detail-row">
          <div class="detail-label">Platform:</div>
          <div class="detail-value"><%= agent.metadata?.platform || 'Unknown' %></div>
        </div>
        <div class="detail-row">
          <div class="detail-label">Status:</div>
          <div class="detail-value">
            <span class="status-badge status-<%= agent.status %>"><%= agent.status %></span>
          </div>
        </div>
        <div class="detail-row">
          <div class="detail-label">Last Seen:</div>
          <div class="detail-value"><%= agent.last_seen ? new Date(agent.last_seen).toLocaleString() : 'Never' %></div>
        </div>
        <div class="detail-row">
          <div class="detail-label">Registered:</div>
          <div class="detail-value"><%= new Date(agent.registered_at).toLocaleString() %></div>
        </div>
        <div class="detail-row">
          <div class="detail-label">Public Key:</div>
          <div class="detail-value" style="word-break: break-all; font-size: 11px;">
            <%= agent.public_key ? agent.public_key.substring(0, 100) + '...' : 'None' %>
          </div>
        </div>
        <div class="detail-row">
          <div class="detail-label">Workflows:</div>
          <div class="detail-value">
            <%= agent.config.workflows ? agent.config.workflows.length : 0 %> deployed
          </div>
        </div>
      </div>
      
      <h3>Deployed Workflows</h3>
      <div class="workflows-by-trigger">
        <% 
        const workflowsByTrigger = {};
        if (agent.config.workflows) {
          agent.config.workflows.forEach(workflow => {
            const triggerType = workflow.trigger?.type || 'manual';
            if (!workflowsByTrigger[triggerType]) {
              workflowsByTrigger[triggerType] = [];
            }
            workflowsByTrigger[triggerType].push(workflow);
          });
        }
        
        const triggerIcons = {
          'file': 'üìÅ',
          'schedule': '‚è∞',
          'webhook': 'üåê',
          'manual': 'üëÜ',
          '': '‚ùì'
        };
        
        const triggerColors = {
          'file': '#4FC3F7',
          'schedule': '#FFB74D',
          'webhook': '#BA68C8',
          'manual': '#81C784',
          '': '#999'
        };
        %>
        
        <% if (Object.keys(workflowsByTrigger).length === 0) { %>
          <div style="padding: 20px; text-align: center; color: #999; background: #f8f9fa; border-radius: 8px;">
            No workflows deployed to this agent
          </div>
        <% } else { %>
          <% Object.entries(workflowsByTrigger).forEach(([triggerType, workflows]) => { %>
            <div class="trigger-group">
              <h4 class="trigger-header" style="color: <%= triggerColors[triggerType] || '#666' %>;">
                <span style="font-size: 20px; margin-right: 8px;"><%= triggerIcons[triggerType] || '‚ùì' %></span>
                <%= triggerType ? triggerType.charAt(0).toUpperCase() + triggerType.slice(1) : 'Unknown' %> Trigger
                <span style="font-weight: normal; font-size: 14px; color: #666;">(<%= workflows.length %> workflow<%= workflows.length !== 1 ? 's' : '' %>)</span>
              </h4>
              <div class="workflow-cards">
                <% workflows.forEach(workflow => { %>
                  <div class="workflow-card">
                    <div class="workflow-name"><%= workflow.name || workflow.id %></div>
                    <div class="workflow-details">
                      <% if (triggerType === 'schedule' && workflow.trigger?.config?.cron) { %>
                        <div class="workflow-detail">
                          <span class="detail-icon">üïê</span>
                          Cron: <%= workflow.trigger.config.cron %>
                        </div>
                      <% } else if (triggerType === 'file' && workflow.trigger?.config) { %>
                        <div class="workflow-detail">
                          <span class="detail-icon">üìÇ</span>
                          Path: <%= workflow.trigger.config.path || 'Not set' %>
                        </div>
                        <div class="workflow-detail">
                          <span class="detail-icon">üîç</span>
                          Pattern: <%= workflow.trigger.config.pattern || '*' %>
                        </div>
                      <% } else if (triggerType === 'webhook' && workflow.trigger?.config) { %>
                        <div class="workflow-detail">
                          <span class="detail-icon">üîó</span>
                          Path: <%= workflow.trigger.config.path || '/webhook' %>
                        </div>
                      <% } %>
                      <div class="workflow-detail">
                        <span class="detail-icon">üìù</span>
                        Steps: <%= workflow.steps ? workflow.steps.length : 0 %>
                      </div>
                      <div class="workflow-detail">
                        <span class="detail-icon">üîÑ</span>
                        Status: <%= workflow.enabled ? 'Enabled' : 'Disabled' %>
                      </div>
                    </div>
                  </div>
                <% }) %>
              </div>
            </div>
          <% }) %>
        <% } %>
      </div>
      
      <h3>Recent Logs</h3>
      <table class="log-table">
        <thead>
          <tr>
            <th>Time</th>
            <th>Level</th>
            <th>Message</th>
          </tr>
        </thead>
        <tbody>
          <% if (logs.length === 0) { %>
            <tr>
              <td colspan="3" style="text-align: center; padding: 20px; color: #999;">
                No logs available
              </td>
            </tr>
          <% } else { %>
            <% logs.forEach(log => { %>
              <tr>
                <td><%= new Date(log.timestamp).toLocaleString() %></td>
                <td>
                  <span class="log-level log-<%= log.level %>"><%= log.level.toUpperCase() %></span>
                </td>
                <td><%= log.message %></td>
              </tr>
            <% }) %>
          <% } %>
        </tbody>
      </table>
    </div>
  </main>
  
  <script>
  function sendCommand(command) {
    fetch('/api/agents/<%= agent.id %>/command', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ command, args: {} })
    })
    .then(r => r.json())
    .then(data => {
      alert(`Command '${command}' sent successfully`);
    })
    .catch(err => alert('Failed to send command: ' + err.message));
  }
  
  function deleteAgent() {
    if (confirm('Are you sure you want to delete this agent? This cannot be undone.')) {
      fetch('/api/agents/<%= agent.id %>', { method: 'DELETE' })
        .then(r => r.json())
        .then(() => {
          alert('Agent deleted');
          window.location.href = '/agents';
        })
        .catch(err => alert('Failed to delete agent: ' + err.message));
    }
  }
  </script>
</body>
</html>